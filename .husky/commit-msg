
# Run commitlint
echo "\033[1;36m===================================\033[0m"
echo "\033[1;36müîç Checking commit message format...\033[0m"
echo "\033[1;36m===================================\033[0m"

COMMITLINT_EXIT_CODE=0
OUTPUT=$(pnpm commitlint --edit $1 2>&1) || COMMITLINT_EXIT_CODE=$?

if [ $COMMITLINT_EXIT_CODE -eq 0 ]; then
  echo "\033[1;32m‚úÖ Commit message format is valid!\033[0m"
else
  echo "\033[1;31m‚ùå Commit message format is invalid!\033[0m"
  echo "\033[1;33m"  
  echo "$OUTPUT" | grep -E "(‚úñ|‚ìò)" | sed 's/‚úñ/‚ùå/g' | sed 's/‚ìò/‚ÑπÔ∏è /g'
  echo "\033[0m"  
  echo "\033[1;34müìù COMMIT FORMAT GUIDE:\033[0m"
  echo "\033[1;37m   <type>[optional scope]: <Subject starting with capital letter>\033[0m"
  echo ""
  echo "\033[1;34müîÑ AVAILABLE TYPES:\033[0m"
  echo "\033[0;36m   feat\033[0m:     New feature"
  echo "\033[0;36m   fix\033[0m:      Bug fix"
  echo "\033[0;36m   docs\033[0m:     Documentation changes"
  echo "\033[0;36m   style\033[0m:    Code style/formatting"
  echo "\033[0;36m   refactor\033[0m: Code restructure"
  echo "\033[0;36m   perf\033[0m:     Performance improvements"
  echo "\033[0;36m   test\033[0m:     Test-related changes"
  echo "\033[0;36m   build\033[0m:    Build system/dependencies"
  echo "\033[0;36m   ci\033[0m:       CI configuration"
  echo "\033[0;36m   chore\033[0m:    Maintenance tasks"
  echo "\033[0;36m   revert\033[0m:   Revert changes"
  echo ""
  echo "\033[1;34müìã EXAMPLES:\033[0m"
  echo "\033[0;37m   feat: Add user authentication\033[0m"
  echo "\033[0;37m   fix(api): Fix timeout issues\033[0m"
  echo "\033[0;37m   docs: Update README\033[0m"
  echo ""
  exit 1
fi
